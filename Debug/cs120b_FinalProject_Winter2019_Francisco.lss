
cs120b_FinalProject_Winter2019_Francisco.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000772  00000806  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000772  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  0080010c  0080010c  00000812  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000812  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000844  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000119f  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1f  00000000  00000000  00001af3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098c  00000000  00000000  00002512  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002ea0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d6  00000000  00000000  000030a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a1c  00000000  00000000  00003776  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004192  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	ba c0       	rjmp	.+372    	; 0x1aa <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e7       	ldi	r30, 0x72	; 114
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 34       	cpi	r26, 0x4B	; 75
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a8 d2       	rcall	.+1360   	; 0x614 <main>
  c4:	54 c3       	rjmp	.+1704   	; 0x76e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <motionSensor>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	91 05       	cpc	r25, r1
  cc:	31 f0       	breq	.+12     	; 0xda <motionSensor+0x12>
  ce:	83 30       	cpi	r24, 0x03	; 3
  d0:	91 05       	cpc	r25, r1
  d2:	41 f0       	breq	.+16     	; 0xe4 <motionSensor+0x1c>
  d4:	89 2b       	or	r24, r25
  d6:	99 f4       	brne	.+38     	; 0xfe <motionSensor+0x36>
  d8:	09 c0       	rjmp	.+18     	; 0xec <motionSensor+0x24>
  da:	03 99       	sbic	0x00, 3	; 0
  dc:	07 c0       	rjmp	.+14     	; 0xec <motionSensor+0x24>
  de:	03 9b       	sbis	0x00, 3	; 0
  e0:	09 c0       	rjmp	.+18     	; 0xf4 <motionSensor+0x2c>
  e2:	04 c0       	rjmp	.+8      	; 0xec <motionSensor+0x24>
  e4:	03 9b       	sbis	0x00, 3	; 0
  e6:	06 c0       	rjmp	.+12     	; 0xf4 <motionSensor+0x2c>
  e8:	03 9b       	sbis	0x00, 3	; 0
  ea:	04 c0       	rjmp	.+8      	; 0xf4 <motionSensor+0x2c>
  ec:	1b b8       	out	0x0b, r1	; 11
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	08 95       	ret
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	83 e0       	ldi	r24, 0x03	; 3
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	08 95       	ret
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	08 95       	ret

00000104 <padTouch>:
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	91 05       	cpc	r25, r1
 108:	31 f0       	breq	.+12     	; 0x116 <padTouch+0x12>
 10a:	82 30       	cpi	r24, 0x02	; 2
 10c:	91 05       	cpc	r25, r1
 10e:	41 f0       	breq	.+16     	; 0x120 <padTouch+0x1c>
 110:	89 2b       	or	r24, r25
 112:	99 f4       	brne	.+38     	; 0x13a <padTouch+0x36>
 114:	09 c0       	rjmp	.+18     	; 0x128 <padTouch+0x24>
 116:	02 99       	sbic	0x00, 2	; 0
 118:	07 c0       	rjmp	.+14     	; 0x128 <padTouch+0x24>
 11a:	02 9b       	sbis	0x00, 2	; 0
 11c:	09 c0       	rjmp	.+18     	; 0x130 <padTouch+0x2c>
 11e:	04 c0       	rjmp	.+8      	; 0x128 <padTouch+0x24>
 120:	02 9b       	sbis	0x00, 2	; 0
 122:	06 c0       	rjmp	.+12     	; 0x130 <padTouch+0x2c>
 124:	02 9b       	sbis	0x00, 2	; 0
 126:	04 c0       	rjmp	.+8      	; 0x130 <padTouch+0x2c>
 128:	1b b8       	out	0x0b, r1	; 11
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	08 95       	ret
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	8b b9       	out	0x0b, r24	; 11
 134:	82 e0       	ldi	r24, 0x02	; 2
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	08 95       	ret
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	08 95       	ret

00000140 <TimerSet>:
 140:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 144:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 148:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 14c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 150:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_avr_timer_cntcurr>
 154:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_avr_timer_cntcurr+0x1>
 158:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_avr_timer_cntcurr+0x2>
 15c:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_avr_timer_cntcurr+0x3>
 160:	08 95       	ret

00000162 <TimerOn>:
 162:	8b e0       	ldi	r24, 0x0B	; 11
 164:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 168:	8d e7       	ldi	r24, 0x7D	; 125
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 170:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 174:	82 e0       	ldi	r24, 0x02	; 2
 176:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 17a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 17e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 182:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 186:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 18a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 18e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 192:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <_avr_timer_cntcurr>
 196:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <_avr_timer_cntcurr+0x1>
 19a:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <_avr_timer_cntcurr+0x2>
 19e:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <_avr_timer_cntcurr+0x3>
 1a2:	8f b7       	in	r24, 0x3f	; 63
 1a4:	80 68       	ori	r24, 0x80	; 128
 1a6:	8f bf       	out	0x3f, r24	; 63
 1a8:	08 95       	ret

000001aa <__vector_13>:
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
 1b8:	af 93       	push	r26
 1ba:	bf 93       	push	r27
 1bc:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <_avr_timer_cntcurr>
 1c0:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <_avr_timer_cntcurr+0x1>
 1c4:	a0 91 40 01 	lds	r26, 0x0140	; 0x800140 <_avr_timer_cntcurr+0x2>
 1c8:	b0 91 41 01 	lds	r27, 0x0141	; 0x800141 <_avr_timer_cntcurr+0x3>
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	a1 09       	sbc	r26, r1
 1d0:	b1 09       	sbc	r27, r1
 1d2:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <_avr_timer_cntcurr>
 1d6:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <_avr_timer_cntcurr+0x1>
 1da:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <_avr_timer_cntcurr+0x2>
 1de:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <_avr_timer_cntcurr+0x3>
 1e2:	89 2b       	or	r24, r25
 1e4:	8a 2b       	or	r24, r26
 1e6:	8b 2b       	or	r24, r27
 1e8:	99 f4       	brne	.+38     	; 0x210 <__vector_13+0x66>
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <TimerFlag>
 1f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1f8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1fc:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 200:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <_avr_timer_cntcurr>
 204:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <_avr_timer_cntcurr+0x1>
 208:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <_avr_timer_cntcurr+0x2>
 20c:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <_avr_timer_cntcurr+0x3>
 210:	bf 91       	pop	r27
 212:	af 91       	pop	r26
 214:	9f 91       	pop	r25
 216:	8f 91       	pop	r24
 218:	0f 90       	pop	r0
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	0f 90       	pop	r0
 21e:	1f 90       	pop	r1
 220:	18 95       	reti

00000222 <InitADC>:
 222:	80 e4       	ldi	r24, 0x40	; 64
 224:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 228:	87 e8       	ldi	r24, 0x87	; 135
 22a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 22e:	08 95       	ret

00000230 <ReadADC>:
 230:	cf 93       	push	r28
 232:	c8 2f       	mov	r28, r24
 234:	f6 df       	rcall	.-20     	; 0x222 <InitADC>
 236:	ec e7       	ldi	r30, 0x7C	; 124
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	90 81       	ld	r25, Z
 23c:	8c 2f       	mov	r24, r28
 23e:	87 70       	andi	r24, 0x07	; 7
 240:	89 2b       	or	r24, r25
 242:	80 83       	st	Z, r24
 244:	ea e7       	ldi	r30, 0x7A	; 122
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	80 64       	ori	r24, 0x40	; 64
 24c:	80 83       	st	Z, r24
 24e:	80 81       	ld	r24, Z
 250:	84 ff       	sbrs	r24, 4
 252:	fd cf       	rjmp	.-6      	; 0x24e <ReadADC+0x1e>
 254:	ea e7       	ldi	r30, 0x7A	; 122
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	80 61       	ori	r24, 0x10	; 16
 25c:	80 83       	st	Z, r24
 25e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 262:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <joyStickFlicked>:
 26a:	9c 01       	movw	r18, r24
 26c:	3a 95       	dec	r19
 26e:	2d 3f       	cpi	r18, 0xFD	; 253
 270:	41 e0       	ldi	r20, 0x01	; 1
 272:	34 07       	cpc	r19, r20
 274:	a0 f5       	brcc	.+104    	; 0x2de <joyStickFlicked+0x74>
 276:	68 36       	cpi	r22, 0x68	; 104
 278:	e2 e0       	ldi	r30, 0x02	; 2
 27a:	7e 07       	cpc	r23, r30
 27c:	58 f1       	brcs	.+86     	; 0x2d4 <joyStickFlicked+0x6a>
 27e:	15 c0       	rjmp	.+42     	; 0x2aa <joyStickFlicked+0x40>
 280:	ab 01       	movw	r20, r22
 282:	5a 95       	dec	r21
 284:	4d 3f       	cpi	r20, 0xFD	; 253
 286:	51 40       	sbci	r21, 0x01	; 1
 288:	98 f0       	brcs	.+38     	; 0x2b0 <joyStickFlicked+0x46>
 28a:	2d 3f       	cpi	r18, 0xFD	; 253
 28c:	31 40       	sbci	r19, 0x01	; 1
 28e:	98 f4       	brcc	.+38     	; 0x2b6 <joyStickFlicked+0x4c>
 290:	6f 3f       	cpi	r22, 0xFF	; 255
 292:	71 05       	cpc	r23, r1
 294:	98 f0       	brcs	.+38     	; 0x2bc <joyStickFlicked+0x52>
 296:	85 39       	cpi	r24, 0x95	; 149
 298:	91 40       	sbci	r25, 0x01	; 1
 29a:	98 f4       	brcc	.+38     	; 0x2c2 <joyStickFlicked+0x58>
 29c:	7a 95       	dec	r23
 29e:	6d 3f       	cpi	r22, 0xFD	; 253
 2a0:	71 40       	sbci	r23, 0x01	; 1
 2a2:	90 f4       	brcc	.+36     	; 0x2c8 <joyStickFlicked+0x5e>
 2a4:	84 e0       	ldi	r24, 0x04	; 4
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	08 95       	ret
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	08 95       	ret
 2b0:	82 e0       	ldi	r24, 0x02	; 2
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	08 95       	ret
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	08 95       	ret
 2bc:	83 e0       	ldi	r24, 0x03	; 3
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	08 95       	ret
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	08 95       	ret
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	08 95       	ret
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	08 95       	ret
 2d4:	88 36       	cpi	r24, 0x68	; 104
 2d6:	42 e0       	ldi	r20, 0x02	; 2
 2d8:	94 07       	cpc	r25, r20
 2da:	30 f4       	brcc	.+12     	; 0x2e8 <joyStickFlicked+0x7e>
 2dc:	d9 cf       	rjmp	.-78     	; 0x290 <joyStickFlicked+0x26>
 2de:	88 36       	cpi	r24, 0x68	; 104
 2e0:	e2 e0       	ldi	r30, 0x02	; 2
 2e2:	9e 07       	cpc	r25, r30
 2e4:	c0 f2       	brcs	.-80     	; 0x296 <joyStickFlicked+0x2c>
 2e6:	cc cf       	rjmp	.-104    	; 0x280 <joyStickFlicked+0x16>
 2e8:	9b 01       	movw	r18, r22
 2ea:	3a 95       	dec	r19
 2ec:	2d 3f       	cpi	r18, 0xFD	; 253
 2ee:	31 40       	sbci	r19, 0x01	; 1
 2f0:	70 f3       	brcs	.-36     	; 0x2ce <joyStickFlicked+0x64>
 2f2:	ce cf       	rjmp	.-100    	; 0x290 <joyStickFlicked+0x26>

000002f4 <GameLogic>:
 2f4:	ef 92       	push	r14
 2f6:	ff 92       	push	r15
 2f8:	0f 93       	push	r16
 2fa:	1f 93       	push	r17
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	ec 01       	movw	r28, r24
 302:	82 30       	cpi	r24, 0x02	; 2
 304:	91 05       	cpc	r25, r1
 306:	09 f4       	brne	.+2      	; 0x30a <GameLogic+0x16>
 308:	7e c0       	rjmp	.+252    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 30a:	34 f4       	brge	.+12     	; 0x318 <GameLogic+0x24>
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	09 f4       	brne	.+2      	; 0x312 <GameLogic+0x1e>
 310:	ce c0       	rjmp	.+412    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 312:	01 97       	sbiw	r24, 0x01	; 1
 314:	49 f0       	breq	.+18     	; 0x328 <GameLogic+0x34>
 316:	e2 c0       	rjmp	.+452    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 318:	83 30       	cpi	r24, 0x03	; 3
 31a:	91 05       	cpc	r25, r1
 31c:	09 f4       	brne	.+2      	; 0x320 <GameLogic+0x2c>
 31e:	c7 c0       	rjmp	.+398    	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 320:	04 97       	sbiw	r24, 0x04	; 4
 322:	09 f4       	brne	.+2      	; 0x326 <GameLogic+0x32>
 324:	ae c0       	rjmp	.+348    	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 326:	da c0       	rjmp	.+436    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	82 df       	rcall	.-252    	; 0x230 <ReadADC>
 32c:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <x+0x1>
 330:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <x>
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	7c df       	rcall	.-264    	; 0x230 <ReadADC>
 338:	8c 01       	movw	r16, r24
 33a:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <y+0x1>
 33e:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <y>
 342:	03 9b       	sbis	0x00, 3	; 0
 344:	0e c0       	rjmp	.+28     	; 0x362 <GameLogic+0x6e>
 346:	bc 01       	movw	r22, r24
 348:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 34c:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 350:	8c df       	rcall	.-232    	; 0x26a <joyStickFlicked>
 352:	89 2b       	or	r24, r25
 354:	31 f4       	brne	.+12     	; 0x362 <GameLogic+0x6e>
 356:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <balls.1931>
 35a:	85 30       	cpi	r24, 0x05	; 5
 35c:	08 f4       	brcc	.+2      	; 0x360 <GameLogic+0x6c>
 35e:	14 c1       	rjmp	.+552    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 360:	fb c0       	rjmp	.+502    	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 362:	03 99       	sbic	0x00, 3	; 0
 364:	41 c0       	rjmp	.+130    	; 0x3e8 <GameLogic+0xf4>
 366:	b8 01       	movw	r22, r16
 368:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 36c:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 370:	7c df       	rcall	.-264    	; 0x26a <joyStickFlicked>
 372:	89 2b       	or	r24, r25
 374:	09 f0       	breq	.+2      	; 0x378 <GameLogic+0x84>
 376:	fe c0       	rjmp	.+508    	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 378:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <balls.1931>
 37c:	85 30       	cpi	r24, 0x05	; 5
 37e:	08 f0       	brcs	.+2      	; 0x382 <GameLogic+0x8e>
 380:	01 c1       	rjmp	.+514    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 382:	8f 5f       	subi	r24, 0xFF	; 255
 384:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <balls.1931>
 388:	85 b1       	in	r24, 0x05	; 5
 38a:	81 11       	cpse	r24, r1
 38c:	05 c0       	rjmp	.+10     	; 0x398 <GameLogic+0xa4>
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	85 b9       	out	0x05, r24	; 5
 392:	c2 e0       	ldi	r28, 0x02	; 2
 394:	d0 e0       	ldi	r29, 0x00	; 0
 396:	f8 c0       	rjmp	.+496    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 398:	85 b1       	in	r24, 0x05	; 5
 39a:	81 30       	cpi	r24, 0x01	; 1
 39c:	29 f4       	brne	.+10     	; 0x3a8 <GameLogic+0xb4>
 39e:	83 e0       	ldi	r24, 0x03	; 3
 3a0:	85 b9       	out	0x05, r24	; 5
 3a2:	c2 e0       	ldi	r28, 0x02	; 2
 3a4:	d0 e0       	ldi	r29, 0x00	; 0
 3a6:	f0 c0       	rjmp	.+480    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 3a8:	85 b1       	in	r24, 0x05	; 5
 3aa:	83 30       	cpi	r24, 0x03	; 3
 3ac:	29 f4       	brne	.+10     	; 0x3b8 <GameLogic+0xc4>
 3ae:	87 e0       	ldi	r24, 0x07	; 7
 3b0:	85 b9       	out	0x05, r24	; 5
 3b2:	c2 e0       	ldi	r28, 0x02	; 2
 3b4:	d0 e0       	ldi	r29, 0x00	; 0
 3b6:	e8 c0       	rjmp	.+464    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 3b8:	85 b1       	in	r24, 0x05	; 5
 3ba:	87 30       	cpi	r24, 0x07	; 7
 3bc:	29 f4       	brne	.+10     	; 0x3c8 <GameLogic+0xd4>
 3be:	8f e0       	ldi	r24, 0x0F	; 15
 3c0:	85 b9       	out	0x05, r24	; 5
 3c2:	c2 e0       	ldi	r28, 0x02	; 2
 3c4:	d0 e0       	ldi	r29, 0x00	; 0
 3c6:	e0 c0       	rjmp	.+448    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 3c8:	85 b1       	in	r24, 0x05	; 5
 3ca:	8f 30       	cpi	r24, 0x0F	; 15
 3cc:	29 f4       	brne	.+10     	; 0x3d8 <GameLogic+0xe4>
 3ce:	8f e1       	ldi	r24, 0x1F	; 31
 3d0:	85 b9       	out	0x05, r24	; 5
 3d2:	c2 e0       	ldi	r28, 0x02	; 2
 3d4:	d0 e0       	ldi	r29, 0x00	; 0
 3d6:	d8 c0       	rjmp	.+432    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 3d8:	85 b1       	in	r24, 0x05	; 5
 3da:	8f 31       	cpi	r24, 0x1F	; 31
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <GameLogic+0xec>
 3de:	c1 c0       	rjmp	.+386    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 3e0:	85 b9       	out	0x05, r24	; 5
 3e2:	c2 e0       	ldi	r28, 0x02	; 2
 3e4:	d0 e0       	ldi	r29, 0x00	; 0
 3e6:	d0 c0       	rjmp	.+416    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 3e8:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <balls.1931>
 3ec:	85 30       	cpi	r24, 0x05	; 5
 3ee:	08 f0       	brcs	.+2      	; 0x3f2 <GameLogic+0xfe>
 3f0:	bb c0       	rjmp	.+374    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 3f2:	b8 01       	movw	r22, r16
 3f4:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 3f8:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 3fc:	36 df       	rcall	.-404    	; 0x26a <joyStickFlicked>
 3fe:	89 2b       	or	r24, r25
 400:	09 f4       	brne	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	c2 c0       	rjmp	.+388    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 404:	6b c0       	rjmp	.+214    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 406:	10 91 3c 01 	lds	r17, 0x013C	; 0x80013c <timeCounter.1930>
 40a:	1f 5f       	subi	r17, 0xFF	; 255
 40c:	10 93 3c 01 	sts	0x013C, r17	; 0x80013c <timeCounter.1930>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	0e df       	rcall	.-484    	; 0x230 <ReadADC>
 414:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <x+0x1>
 418:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <x>
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	08 df       	rcall	.-496    	; 0x230 <ReadADC>
 420:	7c 01       	movw	r14, r24
 422:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <y+0x1>
 426:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <y>
 42a:	19 30       	cpi	r17, 0x09	; 9
 42c:	28 f5       	brcc	.+74     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 42e:	02 9b       	sbis	0x00, 2	; 0
 430:	09 c0       	rjmp	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 432:	bc 01       	movw	r22, r24
 434:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 438:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 43c:	16 df       	rcall	.-468    	; 0x26a <joyStickFlicked>
 43e:	89 2b       	or	r24, r25
 440:	09 f4       	brne	.+2      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 442:	a2 c0       	rjmp	.+324    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 444:	02 99       	sbic	0x00, 2	; 0
 446:	0c c0       	rjmp	.+24     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 448:	b7 01       	movw	r22, r14
 44a:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 44e:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 452:	0b df       	rcall	.-490    	; 0x26a <joyStickFlicked>
 454:	89 2b       	or	r24, r25
 456:	09 f0       	breq	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 458:	92 c0       	rjmp	.+292    	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 45a:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timeCounter.1930>
 45e:	47 c0       	rjmp	.+142    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 460:	02 9b       	sbis	0x00, 2	; 0
 462:	92 c0       	rjmp	.+292    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 464:	b7 01       	movw	r22, r14
 466:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 46a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 46e:	fd de       	rcall	.-518    	; 0x26a <joyStickFlicked>
 470:	89 2b       	or	r24, r25
 472:	09 f4       	brne	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 474:	89 c0       	rjmp	.+274    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 476:	32 c0       	rjmp	.+100    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 478:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timeCounter.1930>
 47c:	c1 e0       	ldi	r28, 0x01	; 1
 47e:	d0 e0       	ldi	r29, 0x00	; 0
 480:	83 c0       	rjmp	.+262    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	d5 de       	rcall	.-598    	; 0x230 <ReadADC>
 486:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <x+0x1>
 48a:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <x>
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	cf de       	rcall	.-610    	; 0x230 <ReadADC>
 492:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <y+0x1>
 496:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <y>
 49a:	bc 01       	movw	r22, r24
 49c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 4a0:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 4a4:	e2 de       	rcall	.-572    	; 0x26a <joyStickFlicked>
 4a6:	89 2b       	or	r24, r25
 4a8:	09 f4       	brne	.+2      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4aa:	6e c0       	rjmp	.+220    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 4ac:	17 c0       	rjmp	.+46     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ae:	c1 e0       	ldi	r28, 0x01	; 1
 4b0:	d0 e0       	ldi	r29, 0x00	; 0
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b4:	c4 e0       	ldi	r28, 0x04	; 4
 4b6:	d0 e0       	ldi	r29, 0x00	; 0
 4b8:	c3 30       	cpi	r28, 0x03	; 3
 4ba:	d1 05       	cpc	r29, r1
 4bc:	44 f4       	brge	.+16     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4be:	c1 30       	cpi	r28, 0x01	; 1
 4c0:	d1 05       	cpc	r29, r1
 4c2:	0c f0       	brlt	.+2      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c4:	61 c0       	rjmp	.+194    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 4c6:	20 97       	sbiw	r28, 0x00	; 0
 4c8:	09 f0       	breq	.+2      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4ca:	40 c0       	rjmp	.+128    	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 4cc:	07 c0       	rjmp	.+14     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ce:	c3 30       	cpi	r28, 0x03	; 3
 4d0:	d1 05       	cpc	r29, r1
 4d2:	69 f0       	breq	.+26     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4d4:	c4 30       	cpi	r28, 0x04	; 4
 4d6:	d1 05       	cpc	r29, r1
 4d8:	c9 f5       	brne	.+114    	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 4da:	56 c0       	rjmp	.+172    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 4dc:	15 b8       	out	0x05, r1	; 5
 4de:	18 b8       	out	0x08, r1	; 8
 4e0:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <timeCounter.1930>
 4e4:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <balls.1931>
 4e8:	c0 e0       	ldi	r28, 0x00	; 0
 4ea:	d0 e0       	ldi	r29, 0x00	; 0
 4ec:	4d c0       	rjmp	.+154    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 4ee:	88 b1       	in	r24, 0x08	; 8
 4f0:	81 11       	cpse	r24, r1
 4f2:	05 c0       	rjmp	.+10     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	88 b9       	out	0x08, r24	; 8
 4f8:	c3 e0       	ldi	r28, 0x03	; 3
 4fa:	d0 e0       	ldi	r29, 0x00	; 0
 4fc:	45 c0       	rjmp	.+138    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 4fe:	88 b1       	in	r24, 0x08	; 8
 500:	81 30       	cpi	r24, 0x01	; 1
 502:	29 f4       	brne	.+10     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 504:	83 e0       	ldi	r24, 0x03	; 3
 506:	88 b9       	out	0x08, r24	; 8
 508:	c3 e0       	ldi	r28, 0x03	; 3
 50a:	d0 e0       	ldi	r29, 0x00	; 0
 50c:	3d c0       	rjmp	.+122    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 50e:	88 b1       	in	r24, 0x08	; 8
 510:	83 30       	cpi	r24, 0x03	; 3
 512:	29 f4       	brne	.+10     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 514:	87 e0       	ldi	r24, 0x07	; 7
 516:	88 b9       	out	0x08, r24	; 8
 518:	c3 e0       	ldi	r28, 0x03	; 3
 51a:	d0 e0       	ldi	r29, 0x00	; 0
 51c:	35 c0       	rjmp	.+106    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 51e:	88 b1       	in	r24, 0x08	; 8
 520:	87 30       	cpi	r24, 0x07	; 7
 522:	29 f4       	brne	.+10     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 524:	8f e0       	ldi	r24, 0x0F	; 15
 526:	88 b9       	out	0x08, r24	; 8
 528:	c3 e0       	ldi	r28, 0x03	; 3
 52a:	d0 e0       	ldi	r29, 0x00	; 0
 52c:	2d c0       	rjmp	.+90     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 52e:	88 b1       	in	r24, 0x08	; 8
 530:	8f 30       	cpi	r24, 0x0F	; 15
 532:	29 f4       	brne	.+10     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 534:	8f e1       	ldi	r24, 0x1F	; 31
 536:	88 b9       	out	0x08, r24	; 8
 538:	c3 e0       	ldi	r28, 0x03	; 3
 53a:	d0 e0       	ldi	r29, 0x00	; 0
 53c:	25 c0       	rjmp	.+74     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 53e:	88 b1       	in	r24, 0x08	; 8
 540:	8f 31       	cpi	r24, 0x1F	; 31
 542:	39 f4       	brne	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 544:	88 b9       	out	0x08, r24	; 8
 546:	c3 e0       	ldi	r28, 0x03	; 3
 548:	d0 e0       	ldi	r29, 0x00	; 0
 54a:	1e c0       	rjmp	.+60     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 54c:	18 b8       	out	0x08, r1	; 8
 54e:	15 b8       	out	0x05, r1	; 5
 550:	1b c0       	rjmp	.+54     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 552:	c3 e0       	ldi	r28, 0x03	; 3
 554:	d0 e0       	ldi	r29, 0x00	; 0
 556:	18 c0       	rjmp	.+48     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 558:	03 9b       	sbis	0x00, 3	; 0
 55a:	ac cf       	rjmp	.-168    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 55c:	c4 e0       	ldi	r28, 0x04	; 4
 55e:	d0 e0       	ldi	r29, 0x00	; 0
 560:	13 c0       	rjmp	.+38     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 562:	c2 e0       	ldi	r28, 0x02	; 2
 564:	d0 e0       	ldi	r29, 0x00	; 0
 566:	10 c0       	rjmp	.+32     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 568:	c4 e0       	ldi	r28, 0x04	; 4
 56a:	d0 e0       	ldi	r29, 0x00	; 0
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56e:	c4 e0       	ldi	r28, 0x04	; 4
 570:	d0 e0       	ldi	r29, 0x00	; 0
 572:	0a c0       	rjmp	.+20     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 574:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <balls.1931>
 578:	85 30       	cpi	r24, 0x05	; 5
 57a:	c8 f7       	brcc	.-14     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 57c:	af cf       	rjmp	.-162    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 57e:	02 99       	sbic	0x00, 2	; 0
 580:	ad cf       	rjmp	.-166    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 582:	9a cf       	rjmp	.-204    	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 584:	c4 e0       	ldi	r28, 0x04	; 4
 586:	d0 e0       	ldi	r29, 0x00	; 0
 588:	ce 01       	movw	r24, r28
 58a:	df 91       	pop	r29
 58c:	cf 91       	pop	r28
 58e:	1f 91       	pop	r17
 590:	0f 91       	pop	r16
 592:	ff 90       	pop	r15
 594:	ef 90       	pop	r14
 596:	08 95       	ret

00000598 <joyStick>:
 598:	81 30       	cpi	r24, 0x01	; 1
 59a:	91 05       	cpc	r25, r1
 59c:	31 f0       	breq	.+12     	; 0x5aa <joyStick+0x12>
 59e:	82 30       	cpi	r24, 0x02	; 2
 5a0:	91 05       	cpc	r25, r1
 5a2:	c1 f0       	breq	.+48     	; 0x5d4 <joyStick+0x3c>
 5a4:	89 2b       	or	r24, r25
 5a6:	71 f5       	brne	.+92     	; 0x604 <joyStick+0x6c>
 5a8:	29 c0       	rjmp	.+82     	; 0x5fc <joyStick+0x64>
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	41 de       	rcall	.-894    	; 0x230 <ReadADC>
 5ae:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <x+0x1>
 5b2:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <x>
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	3b de       	rcall	.-906    	; 0x230 <ReadADC>
 5ba:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <y+0x1>
 5be:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <y>
 5c2:	bc 01       	movw	r22, r24
 5c4:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 5c8:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 5cc:	4e de       	rcall	.-868    	; 0x26a <joyStickFlicked>
 5ce:	89 2b       	or	r24, r25
 5d0:	a9 f0       	breq	.+42     	; 0x5fc <joyStick+0x64>
 5d2:	1b c0       	rjmp	.+54     	; 0x60a <joyStick+0x72>
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	2c de       	rcall	.-936    	; 0x230 <ReadADC>
 5d8:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <x+0x1>
 5dc:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <x>
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	26 de       	rcall	.-948    	; 0x230 <ReadADC>
 5e4:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <y+0x1>
 5e8:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <y>
 5ec:	bc 01       	movw	r22, r24
 5ee:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <x>
 5f2:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <x+0x1>
 5f6:	39 de       	rcall	.-910    	; 0x26a <joyStickFlicked>
 5f8:	89 2b       	or	r24, r25
 5fa:	39 f4       	brne	.+14     	; 0x60a <joyStick+0x72>
 5fc:	1b b8       	out	0x0b, r1	; 11
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	08 95       	ret
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	08 95       	ret
 60a:	84 e0       	ldi	r24, 0x04	; 4
 60c:	8b b9       	out	0x0b, r24	; 11
 60e:	82 e0       	ldi	r24, 0x02	; 2
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	08 95       	ret

00000614 <main>:
	}
	return touchPad_States;
}

int main(void)
{
 614:	cf 93       	push	r28
 616:	df 93       	push	r29
 618:	cd b7       	in	r28, 0x3d	; 61
 61a:	de b7       	in	r29, 0x3e	; 62
 61c:	28 97       	sbiw	r28, 0x08	; 8
 61e:	0f b6       	in	r0, 0x3f	; 63
 620:	f8 94       	cli
 622:	de bf       	out	0x3e, r29	; 62
 624:	0f be       	out	0x3f, r0	; 63
 626:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00; PORTA = 0xFF; // input
 628:	11 b8       	out	0x01, r1	; 1
 62a:	8f ef       	ldi	r24, 0xFF	; 255
 62c:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00; // output
 62e:	84 b9       	out	0x04, r24	; 4
 630:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; //output
 632:	87 b9       	out	0x07, r24	; 7
 634:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; //output
 636:	8a b9       	out	0x0a, r24	; 10
 638:	1b b8       	out	0x0b, r1	; 11
	motionPeriod /= GCD;
	gamePeriod /= GCD;
	joyStickPeriod /= GCD;

	static task TouchTask, MotionTask, joyStickTask, GameTask;
	task *tasks[] = {&TouchTask, &MotionTask, &joyStickTask, &GameTask};
 63a:	88 e0       	ldi	r24, 0x08	; 8
 63c:	e4 e0       	ldi	r30, 0x04	; 4
 63e:	f1 e0       	ldi	r31, 0x01	; 1
 640:	de 01       	movw	r26, r28
 642:	11 96       	adiw	r26, 0x01	; 1
 644:	01 90       	ld	r0, Z+
 646:	0d 92       	st	X+, r0
 648:	8a 95       	dec	r24
 64a:	e1 f7       	brne	.-8      	; 0x644 <main+0x30>
	const unsigned short NumTasks = sizeof(tasks) / sizeof(task*);
	
	TouchTask.state = startTou;
 64c:	e0 e3       	ldi	r30, 0x30	; 48
 64e:	f1 e0       	ldi	r31, 0x01	; 1
 650:	11 82       	std	Z+1, r1	; 0x01
 652:	10 82       	st	Z, r1
	TouchTask.period = touchPeriod;
 654:	81 e0       	ldi	r24, 0x01	; 1
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	a0 e0       	ldi	r26, 0x00	; 0
 65a:	b0 e0       	ldi	r27, 0x00	; 0
 65c:	82 83       	std	Z+2, r24	; 0x02
 65e:	93 83       	std	Z+3, r25	; 0x03
 660:	a4 83       	std	Z+4, r26	; 0x04
 662:	b5 83       	std	Z+5, r27	; 0x05
	TouchTask.elapsedTime = touchPeriod;
 664:	86 83       	std	Z+6, r24	; 0x06
 666:	97 83       	std	Z+7, r25	; 0x07
 668:	a0 87       	std	Z+8, r26	; 0x08
 66a:	b1 87       	std	Z+9, r27	; 0x09
	TouchTask.TickFct = &padTouch;
 66c:	22 e8       	ldi	r18, 0x82	; 130
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	33 87       	std	Z+11, r19	; 0x0b
 672:	22 87       	std	Z+10, r18	; 0x0a
	//i++;
	
	MotionTask.state = startMot;
 674:	e4 e2       	ldi	r30, 0x24	; 36
 676:	f1 e0       	ldi	r31, 0x01	; 1
 678:	11 82       	std	Z+1, r1	; 0x01
 67a:	10 82       	st	Z, r1
	MotionTask.period = motionPeriod;
 67c:	82 83       	std	Z+2, r24	; 0x02
 67e:	93 83       	std	Z+3, r25	; 0x03
 680:	a4 83       	std	Z+4, r26	; 0x04
 682:	b5 83       	std	Z+5, r27	; 0x05
	MotionTask.elapsedTime = motionPeriod;
 684:	86 83       	std	Z+6, r24	; 0x06
 686:	97 83       	std	Z+7, r25	; 0x07
 688:	a0 87       	std	Z+8, r26	; 0x08
 68a:	b1 87       	std	Z+9, r27	; 0x09
	MotionTask.TickFct = &motionSensor;
 68c:	24 e6       	ldi	r18, 0x64	; 100
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	33 87       	std	Z+11, r19	; 0x0b
 692:	22 87       	std	Z+10, r18	; 0x0a
	//i++;
	
	GameTask.state = start;
 694:	e8 e1       	ldi	r30, 0x18	; 24
 696:	f1 e0       	ldi	r31, 0x01	; 1
 698:	11 82       	std	Z+1, r1	; 0x01
 69a:	10 82       	st	Z, r1
	GameTask.period = gamePeriod;
 69c:	43 e0       	ldi	r20, 0x03	; 3
 69e:	50 e0       	ldi	r21, 0x00	; 0
 6a0:	60 e0       	ldi	r22, 0x00	; 0
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	42 83       	std	Z+2, r20	; 0x02
 6a6:	53 83       	std	Z+3, r21	; 0x03
 6a8:	64 83       	std	Z+4, r22	; 0x04
 6aa:	75 83       	std	Z+5, r23	; 0x05
	GameTask.elapsedTime = gamePeriod;
 6ac:	46 83       	std	Z+6, r20	; 0x06
 6ae:	57 83       	std	Z+7, r21	; 0x07
 6b0:	60 87       	std	Z+8, r22	; 0x08
 6b2:	71 87       	std	Z+9, r23	; 0x09
	GameTask.TickFct = &GameLogic;
 6b4:	2a e7       	ldi	r18, 0x7A	; 122
 6b6:	31 e0       	ldi	r19, 0x01	; 1
 6b8:	33 87       	std	Z+11, r19	; 0x0b
 6ba:	22 87       	std	Z+10, r18	; 0x0a
	//i++;
	
	joyStickTask.state = startJoy;
 6bc:	ec e0       	ldi	r30, 0x0C	; 12
 6be:	f1 e0       	ldi	r31, 0x01	; 1
 6c0:	11 82       	std	Z+1, r1	; 0x01
 6c2:	10 82       	st	Z, r1
	joyStickTask.period = joyStickPeriod;
 6c4:	82 83       	std	Z+2, r24	; 0x02
 6c6:	93 83       	std	Z+3, r25	; 0x03
 6c8:	a4 83       	std	Z+4, r26	; 0x04
 6ca:	b5 83       	std	Z+5, r27	; 0x05
	joyStickTask.elapsedTime = joyStickPeriod;
 6cc:	86 83       	std	Z+6, r24	; 0x06
 6ce:	97 83       	std	Z+7, r25	; 0x07
 6d0:	a0 87       	std	Z+8, r26	; 0x08
 6d2:	b1 87       	std	Z+9, r27	; 0x09
	joyStickTask.TickFct = &joyStick;
 6d4:	8c ec       	ldi	r24, 0xCC	; 204
 6d6:	92 e0       	ldi	r25, 0x02	; 2
 6d8:	93 87       	std	Z+11, r25	; 0x0b
 6da:	82 87       	std	Z+10, r24	; 0x0a
	//i++;

	TimerSet(GCD);
 6dc:	64 e6       	ldi	r22, 0x64	; 100
 6de:	70 e0       	ldi	r23, 0x00	; 0
 6e0:	80 e0       	ldi	r24, 0x00	; 0
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	2d dd       	rcall	.-1446   	; 0x140 <TimerSet>
	TimerOn();
 6e6:	3d dd       	rcall	.-1414   	; 0x162 <TimerOn>
	InitADC();
 6e8:	9c dd       	rcall	.-1224   	; 0x222 <InitADC>
 6ea:	7e 01       	movw	r14, r28
 6ec:	89 e0       	ldi	r24, 0x09	; 9
 6ee:	e8 0e       	add	r14, r24
 6f0:	f1 1c       	adc	r15, r1
 6f2:	de 01       	movw	r26, r28
 6f4:	11 96       	adiw	r26, 0x01	; 1
 6f6:	6d 01       	movw	r12, r26
 6f8:	f6 01       	movw	r30, r12
	while(1) {
		for(unsigned short j = 0; j < NumTasks; j++)
		{
			if(tasks[j]->elapsedTime == tasks[j]->period)
 6fa:	01 91       	ld	r16, Z+
 6fc:	11 91       	ld	r17, Z+
 6fe:	6f 01       	movw	r12, r30
 700:	d8 01       	movw	r26, r16
 702:	16 96       	adiw	r26, 0x06	; 6
 704:	4d 91       	ld	r20, X+
 706:	5d 91       	ld	r21, X+
 708:	6d 91       	ld	r22, X+
 70a:	7c 91       	ld	r23, X
 70c:	19 97       	sbiw	r26, 0x09	; 9
 70e:	12 96       	adiw	r26, 0x02	; 2
 710:	8d 91       	ld	r24, X+
 712:	9d 91       	ld	r25, X+
 714:	0d 90       	ld	r0, X+
 716:	bc 91       	ld	r27, X
 718:	a0 2d       	mov	r26, r0
 71a:	48 17       	cp	r20, r24
 71c:	59 07       	cpc	r21, r25
 71e:	6a 07       	cpc	r22, r26
 720:	7b 07       	cpc	r23, r27
 722:	79 f4       	brne	.+30     	; 0x742 <main+0x12e>
 724:	d8 01       	movw	r26, r16
			{
				tasks[j]->state = tasks[j]->TickFct(tasks[j]->state);
 726:	1a 96       	adiw	r26, 0x0a	; 10
 728:	ed 91       	ld	r30, X+
 72a:	fc 91       	ld	r31, X
 72c:	1b 97       	sbiw	r26, 0x0b	; 11
 72e:	8d 91       	ld	r24, X+
 730:	9c 91       	ld	r25, X
 732:	09 95       	icall
 734:	f8 01       	movw	r30, r16
 736:	91 83       	std	Z+1, r25	; 0x01
 738:	80 83       	st	Z, r24
 73a:	16 82       	std	Z+6, r1	; 0x06
				tasks[j]->elapsedTime = 0;
 73c:	17 82       	std	Z+7, r1	; 0x07
 73e:	10 86       	std	Z+8, r1	; 0x08
 740:	11 86       	std	Z+9, r1	; 0x09
 742:	f8 01       	movw	r30, r16
			}
			tasks[j]->elapsedTime += 1;
 744:	86 81       	ldd	r24, Z+6	; 0x06
 746:	97 81       	ldd	r25, Z+7	; 0x07
 748:	a0 85       	ldd	r26, Z+8	; 0x08
 74a:	b1 85       	ldd	r27, Z+9	; 0x09
 74c:	01 96       	adiw	r24, 0x01	; 1
 74e:	a1 1d       	adc	r26, r1
 750:	b1 1d       	adc	r27, r1
 752:	86 83       	std	Z+6, r24	; 0x06
 754:	97 83       	std	Z+7, r25	; 0x07
 756:	a0 87       	std	Z+8, r26	; 0x08
 758:	b1 87       	std	Z+9, r27	; 0x09
 75a:	ec 14       	cp	r14, r12

	TimerSet(GCD);
	TimerOn();
	InitADC();
	while(1) {
		for(unsigned short j = 0; j < NumTasks; j++)
 75c:	fd 04       	cpc	r15, r13
 75e:	61 f6       	brne	.-104    	; 0x6f8 <main+0xe4>
 760:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <TimerFlag>
				tasks[j]->state = tasks[j]->TickFct(tasks[j]->state);
				tasks[j]->elapsedTime = 0;
			}
			tasks[j]->elapsedTime += 1;
		}
		while(!TimerFlag);
 764:	88 23       	and	r24, r24
 766:	e1 f3       	breq	.-8      	; 0x760 <main+0x14c>
 768:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <TimerFlag>
		TimerFlag = 0;
 76c:	c2 cf       	rjmp	.-124    	; 0x6f2 <main+0xde>

0000076e <_exit>:
	}
 76e:	f8 94       	cli

00000770 <__stop_program>:
 770:	ff cf       	rjmp	.-2      	; 0x770 <__stop_program>
